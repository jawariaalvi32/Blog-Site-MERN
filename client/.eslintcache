[{"C:\\xampp\\htdocs\\MERN\\client\\src\\index.js":"1","C:\\xampp\\htdocs\\MERN\\client\\src\\reportWebVitals.js":"2","C:\\xampp\\htdocs\\MERN\\client\\src\\App.js":"3","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Add.js":"4","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\SingleUser.js":"5","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Users.js":"6","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Header.js":"7","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Posts.js":"8","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\SinglePost.js":"9","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\AddPost.js":"10","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\header\\Header.js":"11","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\home\\Home.js":"12","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\blog\\Blog.js":"13"},{"size":517,"mtime":1613750972536,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1613750972537,"results":"16","hashOfConfig":"15"},{"size":1417,"mtime":1614023933581,"results":"17","hashOfConfig":"15"},{"size":2107,"mtime":1613750972528,"results":"18","hashOfConfig":"15"},{"size":1570,"mtime":1613750972531,"results":"19","hashOfConfig":"15"},{"size":2245,"mtime":1613750972531,"results":"20","hashOfConfig":"15"},{"size":718,"mtime":1613750972529,"results":"21","hashOfConfig":"15"},{"size":2878,"mtime":1613750972530,"results":"22","hashOfConfig":"15"},{"size":1422,"mtime":1613750972531,"results":"23","hashOfConfig":"15"},{"size":2258,"mtime":1613750972529,"results":"24","hashOfConfig":"15"},{"size":2181,"mtime":1614019882594,"results":"25","hashOfConfig":"15"},{"size":1788,"mtime":1614020659104,"results":"26","hashOfConfig":"15"},{"size":3282,"mtime":1614024612507,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1x8bu48",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\MERN\\client\\src\\index.js",[],["58","59"],"C:\\xampp\\htdocs\\MERN\\client\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\App.js",["60","61"],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Add.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\SingleUser.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Users.js",["62","63"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nfunction Users() {\r\n  const [state, setstate] = useState([]);\r\n  const [msg, setmsg] = useState('')\r\n  const [dummy, setdd] = useState([\r\n    {name:'Faiza',email:'faz@gmail.com',id:1},\r\n    {name:'Shehla',email:'shehla@gmail.com',id:2},\r\n  ]);\r\n  useEffect(() => {\r\n      axios.get('http://localhost:4000/api/users/')\r\n      .then((res) => {\r\n        console.log(res);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n  const handleDelete = (id)=>{\r\n    console.log(id)\r\n    axios.delete('http://localhost:4000/api/users/'+id)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setmsg(`${id} is deleted successfully`);\r\n    })\r\n    .catch((e) => console.log(e));\r\n\r\n\r\n  }\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <p>{msg}</p>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\">\r\n            <Row className=\"col-headers\">\r\n              <Col>Name</Col>\r\n              <Col>Email</Col>\r\n              <Col>Actions</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          {state.map((item, ind) => (\r\n            <ListGroup.Item key={ind} variant=\"light\">\r\n              <Row>\r\n                <Col>{item.name}</Col>\r\n                <Col>{item.email}</Col>\r\n                <Col>\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/single-user/\" + item._id}\r\n                  >\r\n                    View\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\" \r\n                    onClick={()=>handleDelete(item._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))} \r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Header.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\Posts.js",["64","65"],"import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nfunction Posts() {\r\n  const [state, setstate] = useState([]);\r\n  const [dummy, setdd] = useState([\r\n    {name:'Faiza',email:'faz@gmail.com',id:1},\r\n    {name:'Shehla',email:'shehla@gmail.com',id:2},\r\n  ]);\r\n  const [msg, setmsg] = useState('')\r\n  const handleDelete = (id)=>{\r\n    console.log(id)\r\n    axios.delete('http://localhost:4000/api/posts/'+id)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setmsg(`${id} is deleted successfully`);\r\n    })\r\n    .catch((e) => console.log(e));\r\n\r\n\r\n  }\r\n  const handleEdit = (id,newtitle,description)=>{\r\n    let title = prompt(\"Enter title\", newtitle)\r\n    let des = prompt(\"Enter Description\", description)\r\n    let item = {title, des}\r\n    axios.put('http://localhost:4000/api/posts/'+id, item)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n    })\r\n    .catch((e) => console.log(e));\r\n  }\r\n  useEffect(() => {\r\n      axios.get('http://localhost:4000/api/posts/')\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setstate(res.data.data);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }, []);\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n      <Col lg={6} md={8} sm={10} xs={10}>\r\n        <p>{msg}</p>\r\n        <ListGroup>\r\n          <ListGroup.Item variant=\"primary\">\r\n            <Row className=\"col-headers\">\r\n              <Col>Title</Col>\r\n              <Col>Description</Col>\r\n              <Col>Actions</Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n\r\n          {state.map((item, ind) => (\r\n            <ListGroup.Item key={ind} variant=\"light\">\r\n              <Row>\r\n                <Col>{item.title}</Col>\r\n                <Col>{item.description}</Col>\r\n                <Col>\r\n                <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\"\r\n                    as={Link}\r\n                    to={\"/single-post/\" + item._id}\r\n                  >\r\n                    View\r\n                  </Button>&nbsp;\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\" \r\n                    onClick={()=>handleEdit(item._id,item.title,item.description)}\r\n                  >\r\n                    Edit\r\n                  </Button>&nbsp;\r\n                  <Button \r\n                    variant=\"info\"\r\n                    size=\"sm\" \r\n                    onClick={()=>handleDelete(item._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))} \r\n        </ListGroup>\r\n      </Col>\r\n      <Col lg={3} md={2} sm={1} xs={1}></Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Posts;\r\n","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\SinglePost.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\AddPost.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\header\\Header.js",["66","67","68"],"import { Avatar } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   selectSignedIn,\r\n//   selectUserData,\r\n//   setInput,\r\n//   setSignedIn,\r\n//   setUserData,\r\n// } from \"../features/userSlice\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Navbar = () => {\r\n  const [inputValue, setInputValue] = useState(\"tech\");\r\n//   const isSignedIn = useSelector(selectSignedIn);\r\n//   const userData = useSelector(selectUserData);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const logout = (response) => {\r\n//     dispatch(setSignedIn(false));\r\n//     dispatch(setUserData(null));\r\n//   };\r\n\r\n//   const handleClick = (e) => {\r\n//     e.preventDefault();\r\n//     dispatch(setInput(inputValue));\r\n//   };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1 className=\"navbar__header\">BlogMania 💬</h1>\r\n      {/* {isSignedIn && (\r\n        <div className=\"blog__search\">\r\n          <input\r\n            className=\"search\"\r\n            placeholder=\"Search for a blog\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <button className=\"submit\" onClick={handleClick}>\r\n            Search\r\n          </button>\r\n        </div>\r\n      )} */}\r\n\r\n      {/* {isSignedIn ? (\r\n        <div className=\"navbar__user__data\">\r\n          <Avatar\r\n            className=\"user\"\r\n            src={userData?.imageUrl}\r\n            alt={userData?.name}\r\n          />\r\n          <h1 className=\"signedIn\">{userData?.givenName}</h1>\r\n          <GoogleLogout\r\n            clientId=\"57529085775-fk8rn8hren1q8o5ja2idq4m7hug5aong.apps.googleusercontent.com\"\r\n            render={(renderProps) => (\r\n              <button\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                className=\"logout__button\"\r\n              >\r\n                Logout 😦\r\n              </button>\r\n            )}\r\n            onLogoutSuccess={logout}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <h1 className=\"notSignedIn\">User not available 😞</h1>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;","C:\\xampp\\htdocs\\MERN\\client\\src\\components\\home\\Home.js",[],"C:\\xampp\\htdocs\\MERN\\client\\src\\components\\blog\\Blog.js",["69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":50,"nodeType":"78","messageId":"79","endLine":2,"endColumn":54},{"ruleId":"76","severity":1,"message":"80","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":13},{"ruleId":"76","severity":1,"message":"81","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":15},{"ruleId":"76","severity":1,"message":"82","line":9,"column":17,"nodeType":"78","messageId":"79","endLine":9,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"82","line":8,"column":17,"nodeType":"78","messageId":"79","endLine":8,"endColumn":22},{"ruleId":"76","severity":1,"message":"83","line":1,"column":10,"nodeType":"78","messageId":"79","endLine":1,"endColumn":16},{"ruleId":"76","severity":1,"message":"84","line":15,"column":10,"nodeType":"78","messageId":"79","endLine":15,"endColumn":20},{"ruleId":"76","severity":1,"message":"85","line":15,"column":22,"nodeType":"78","messageId":"79","endLine":15,"endColumn":35},{"ruleId":"76","severity":1,"message":"86","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"76","severity":1,"message":"87","line":8,"column":8,"nodeType":"78","messageId":"79","endLine":8,"endColumn":14},{"ruleId":"76","severity":1,"message":"88","line":25,"column":10,"nodeType":"78","messageId":"79","endLine":25,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Posts' is defined but never used.","'dummy' is assigned a value but never used.","'setdd' is assigned a value but never used.","'Avatar' is defined but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'err' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]